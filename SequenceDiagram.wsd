@startuml SequenceDiagram

skinparam sequenceMessageAlign left
activate Renderer

Renderer -> Renderer: limitXChanged
activate AlarmsBar
activate Alarms
activate iQuery
activate AlarmsEngine

Renderer -> iQuery: request(start : DateTime, end : DateTime, interval : DateTime) : QVector<Cortege>
iQuery --> Renderer: arr : QVector<Cortege>

Renderer -> Renderer : parceData(cortege : Cortege)

Renderer -> AlarmsEngine: pushAlarms( : QList<Alarm>)

Renderer -> AlarmsBar: alarmsUpdated()
AlarmsBar -> AlarmsBar:  clearValues()
AlarmsBar -> AlarmsEngine: getAlarmsByPriority(lvl: LvlOfAlarms) : QVariantList

Renderer -> Alarms:  alarmsUpdated()
Alarms -> Alarms:  clearValues()
Alarms -> AlarmsEngine: getTextOfAlarms() : QVector<QString>

box qml #LightGreen
    participant AlarmsBar
    participant Alarms
end box

@enduml