@startuml CortegeClassDiagram

class Cortege {
    + getHead() : std::string
    + getTimemark() : std::string
    + getData() : std::string
    + resetAll() : void
}

struct Channel {
    + initParams() : void
    + reset() : void
}


class ParamShell {
    - param : ParamStat<double>
    + head : std::string
    + reset() : void
    + getMin() : double
    + getMean() : double
    + getMax() : double
    + getNumber() : int
    + push(double value) : void : {slot}
}

class ParamStat<T> {
    - n_records : unsigned int
    - min : T
    - max : T
    - sum : T
    + getMin() : T
    + getMean() : T
    + getMax() : T
    + getNumber() : T
}

class AlarmTrackerShell {
    + setAlarm(alarm : QString) : void : {slot}
    + clearAlarm(alarm : QString) : void : {slot}
    + resetControlPeriod() : void
    + clearAllAlarms() : void
    + getAlarms() : std::list<Entry<std::string>>
}

class AlarmTracker<T> {
    + setAlarm(alarms : T) : void
    + clearAlarm(alarms : T) : void
    + resetControlPeriod() : void
    + clearAllAlarms() : void
    + getAlarms() : std::list<Entry<std::string>>

}

struct Entry<T> {
    + alarm : T
    + isActive : bool
    + clearAlarm()
}



Cortege *-- " * " Channel

Channel *-- " * " ParamShell

Channel --> AlarmTrackerShell

ParamShell --> ParamStat

AlarmTrackerShell --> AlarmTracker

AlarmTracker *-- " * " Entry











@enduml
